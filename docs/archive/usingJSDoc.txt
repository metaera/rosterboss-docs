For each file:

@fileOverview
@author
@since
@version
@deprecated
@example <example text>
@see <related resource> - MyClass#myInstanceMethod, or <a href="http://page.com">Other Page</a>
{@link <related resource>} - just like @see but usable inside other tags
@requires <resourceDescription> - name path or natural language description

For each function/method:
    @param {paramType} [<param name>]  <--- optional
    @param {paramType} [<param name>=<default value>] <--- optional with default value
    @returns {returnType}
    @throws {exceptionType}

For each schema:
    @type

For variables and fields:
    @type {typename}   <-- requires parens
    @default <defaultValue>

For each class:
    @class
    Constructor function: @constructor

    For object literals:
        @lends <classname># - contributes instance properties to <classname>
        @lends <classname> - contributes class properties to <classname>
        @constructs

    @extends <classname> - indicates this is a subclass of <classname>
    @inherits <classname.method>
    @scope <new scope name> - changing scope

    @namespace - object used as a namespace

For variables that get misinterpreted:

    @function
    @field
    @public
    @private
    @inner
    @static
    @name <name> - overrides the parsed name
    @memberOf <parentNamePath> - variable is a member of the specified object

Shared Doclets

/**#@+
    <tags to share>
*/

<statements that will receive the shared doclets>

/**#@-*/
